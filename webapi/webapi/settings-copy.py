"""
Django settings for webapi project.

Generated by 'django-admin startproject' using Django 1.11.12.

For more information on this file, see
https://docs.djangoproject.com/en/1.11/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.11/ref/settings/
"""

import os

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.11/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'b5khz(qs+e*dm^beyeaz0(rzmsl)t@w&0*vr%w_&exqcao%1cr'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['10.6.1.13', 'localhost', '127.0.0.1', '61.60.103.175']


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'rest_framework',
    'rest_framework_swagger',
    'django_filters',
    'rest_framework_filters',
    'crispy_forms',
    'corsheaders',
    'Meta',
    'DataStore',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.common.CommonMiddleware',
]

ROOT_URLCONF = 'webapi.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates'), ],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'webapi.wsgi.application'


# Database
# https://docs.djangoproject.com/en/1.11/ref/settings/#databases

DATABASE_ROUTERS = [
    'qiange.dbrouters.DefaultRouter',
    'qiange.dbrouters.CRSdbRouter',
    'qiange.dbrouters.ObserveDataRouter',
    'qiange.dbrouters.DataSetRouter',
]


ENGINE = 'django.db.backends.mysql'
DB_HOST = '61.60.103.175'
DB_HOST = 'localhost'
USERNAME = 'crsopr'
USERNAME = 'root'

PASSWORD = 'cwb+123'
PASSWORD = ''

DATABASES = {
    'default': {
        'ENGINE': ENGINE,
        'NAME': 'CRSdb',
        'USER': USERNAME,
        'PASSWORD': PASSWORD,
        'HOST': DB_HOST,
        'PORT': 3306,
        'TEST_CHARSET': "utf8",
        'TEST_COLLATION': "utf8_general_ci",
    },
    'CRSdb': {
        'ENGINE': ENGINE,
        'NAME': 'CRSdb',
        'USER': USERNAME,
        'PASSWORD': PASSWORD,
        'HOST': DB_HOST,
        'PORT': 3306,
        'TEST_CHARSET': "utf8",
        'TEST_COLLATION': "utf8_general_ci",
    },
    'ObserveData': {
        'ENGINE': ENGINE,
        'NAME': 'ObserveData',
        'USER': 'weather',
        'PASSWORD': 'weather+123',
        'HOST': DB_HOST,
        'PORT': 3306,
        'TEST_CHARSET': "utf8",
        'TEST_COLLATION': "utf8_general_ci",
    },
}


# Password validation
# https://docs.djangoproject.com/en/1.11/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/1.11/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = False
USE_TZ = False


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.11/howto/static-files/

STATIC_URL = '/static/'
STATIC_ROOT = os.path.join(BASE_DIR, 'static-serve')


REST_FRAMEWORK = {
    'DEFAULT_FILTER_BACKENDS': (
        'rest_framework_filters.backends.DjangoFilterBackend',
    ),
    'PAGE_SIZE': 10,
}

STATICFILES_DIRS = [
    os.path.join(BASE_DIR, "static"),
]

#########################
# django-cors-headers
#########################

CORS_ORIGIN_ALLOW_ALL = True

# from cors
#
# headers.defaults import default_headers
# CORS_ALLOW_HEADERS = default_headers + ('at', )

#########################
#  rest_framework_jwt
#########################
import datetime

JWT_AUTH = {
    'JWT_SECRET_KEY': SECRET_KEY,
    'JWT_ALGORITHM': 'HS256',
    'JWT_VERIFY_EXPIRATION': True,
    'JWT_EXPIRATION_DELTA': datetime.timedelta(seconds=350),
}

import time
import json
import requests


tick = time.time()
res = requests.get('http://wddpapigate.cwb.gov.tw/API/polygonValuesApi-WRF_M04/model/WD01/element/200/level/B10/datetime/2018091600?latlng=1,99;1,155;41,155;41,99;1,99&apikey=57w86cf26HPvstVNLKjVBYzlVxoZBIkT')
print 'Cost %s sec' % time.time() - tick


if res.status_code == 200:
    data = res.json()
else:
    raise RuntimeError(res.text)

with open('api.json', 'w') as fp:
    content = json.dumps(data, indent=2, ensure_ascii=False).decode('escape-unicode')
    fp.write(content)
