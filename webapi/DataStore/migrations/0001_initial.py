# -*- coding: utf-8 -*-
# Generated by Django 1.11.13 on 2018-05-25 18:11
from __future__ import unicode_literals

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Aquaculture',
            fields=[
                ('issuetime', models.DateTimeField(db_column='issueTime')),
                ('update', models.DateTimeField()),
                ('id', models.CharField(max_length=4, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=10)),
                ('lat', models.FloatField()),
                ('lon', models.FloatField()),
                ('at', models.DateTimeField()),
                ('t', models.IntegerField(db_column='T')),
                ('td', models.FloatField(db_column='Td')),
                ('rh', models.IntegerField(db_column='RH')),
                ('pop6h', models.IntegerField(blank=True, db_column='PoP6h', null=True)),
                ('pop6hend', models.DateTimeField(blank=True, db_column='PoP6hEnd', null=True)),
                ('p', models.IntegerField(blank=True, db_column='P', null=True)),
                ('pop12h', models.IntegerField(blank=True, db_column='PoP12h', null=True)),
                ('pop12hend', models.DateTimeField(blank=True, db_column='PoP12hEnd', null=True)),
                ('dir', models.CharField(max_length=3)),
                ('mspeed', models.CharField(db_column='mSpeed', max_length=5)),
                ('beauspeed', models.CharField(db_column='beauSpeed', max_length=4)),
                ('ci', models.IntegerField(db_column='CI')),
                ('citext', models.CharField(db_column='CIText', max_length=4)),
                ('apparentt', models.IntegerField(db_column='ApparentT')),
                ('wxtext', models.CharField(db_column='Wxtext', max_length=15)),
                ('wxvalue', models.IntegerField(db_column='WxValue')),
                ('wxend', models.DateTimeField(db_column='WxEnd')),
                ('weatherdescription', models.CharField(blank=True, db_column='WeatherDescription', max_length=255, null=True)),
                ('weatherdescriptionend', models.DateTimeField(blank=True, db_column='WeatherDescriptionEnd', null=True)),
            ],
            options={
                'db_table': 'AquaCulture',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Buoy',
            fields=[
                ('stationid', models.CharField(db_column='stationId', max_length=10, primary_key=True, serialize=False)),
                ('obstime', models.DateTimeField(db_column='obsTime')),
                ('gust1', models.IntegerField(blank=True, null=True)),
                ('avgwind1', models.IntegerField(blank=True, db_column='avgWind1', null=True)),
                ('dir1', models.IntegerField(blank=True, null=True)),
                ('gust2', models.IntegerField(blank=True, null=True)),
                ('avgwind2', models.IntegerField(blank=True, db_column='avgWind2', null=True)),
                ('dir2', models.IntegerField(blank=True, null=True)),
                ('pressure', models.IntegerField(blank=True, null=True)),
                ('temp', models.IntegerField(blank=True, null=True)),
                ('stemp', models.IntegerField(blank=True, db_column='sTemp', null=True)),
                ('height', models.IntegerField(blank=True, null=True)),
                ('cycle', models.IntegerField(blank=True, null=True)),
                ('wavedir', models.IntegerField(blank=True, db_column='waveDir', null=True)),
            ],
            options={
                'db_table': 'Buoy',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Fishing',
            fields=[
                ('issuetime', models.DateTimeField(db_column='issueTime')),
                ('update', models.DateTimeField()),
                ('id', models.CharField(max_length=4, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=10)),
                ('lat', models.FloatField()),
                ('lon', models.FloatField()),
                ('at', models.DateTimeField()),
                ('t', models.IntegerField(db_column='T')),
                ('td', models.FloatField(db_column='Td')),
                ('rh', models.IntegerField(db_column='RH')),
                ('pop6h', models.IntegerField(blank=True, db_column='PoP6h', null=True)),
                ('pop6hend', models.DateTimeField(blank=True, db_column='PoP6hEnd', null=True)),
                ('pop12h', models.IntegerField(blank=True, db_column='PoP12h', null=True)),
                ('pop12hend', models.DateTimeField(blank=True, db_column='PoP12hEnd', null=True)),
                ('dir', models.CharField(max_length=3)),
                ('mspeed', models.CharField(db_column='mSpeed', max_length=5)),
                ('beauspeed', models.CharField(db_column='beauSpeed', max_length=4)),
                ('ci', models.IntegerField(db_column='CI')),
                ('citext', models.CharField(db_column='CIText', max_length=4)),
                ('apparentt', models.IntegerField(db_column='ApparentT')),
                ('wxtext', models.CharField(db_column='Wxtext', max_length=15)),
                ('wxvalue', models.IntegerField(db_column='WxValue')),
                ('wxend', models.DateTimeField(db_column='WxEnd')),
                ('weatherdescription', models.CharField(blank=True, db_column='WeatherDescription', max_length=255, null=True)),
                ('weatherdescriptionend', models.DateTimeField(blank=True, db_column='WeatherDescriptionEnd', null=True)),
            ],
            options={
                'db_table': 'Fishing',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Gt',
            fields=[
                ('id', models.CharField(db_column='ID', max_length=10, primary_key=True, serialize=False)),
                ('longitude', models.FloatField(blank=True, db_column='Longitude', null=True)),
                ('latitude', models.FloatField(blank=True, db_column='Latitude', null=True)),
                ('temp', models.IntegerField(blank=True, db_column='Temp', null=True)),
                ('rh', models.IntegerField(blank=True, db_column='RH', null=True)),
                ('rain', models.FloatField(blank=True, db_column='Rain', null=True)),
                ('cloud', models.IntegerField(blank=True, db_column='Cloud', null=True)),
                ('ws', models.IntegerField(blank=True, db_column='WS', null=True)),
                ('wd', models.IntegerField(blank=True, db_column='WD', null=True)),
                ('at', models.IntegerField(blank=True, db_column='AT', null=True)),
                ('time', models.DateTimeField(db_column='Time')),
            ],
            options={
                'db_table': 'GT',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Harbor',
            fields=[
                ('issuetime', models.DateTimeField(db_column='issueTime')),
                ('update', models.DateTimeField()),
                ('id', models.CharField(max_length=4, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=10)),
                ('lat', models.FloatField()),
                ('lon', models.FloatField()),
                ('at', models.DateTimeField()),
                ('t', models.IntegerField(db_column='T')),
                ('td', models.FloatField(db_column='Td')),
                ('rh', models.IntegerField(db_column='RH')),
                ('pop6h', models.IntegerField(blank=True, db_column='PoP6h', null=True)),
                ('pop6hend', models.DateTimeField(blank=True, db_column='PoP6hEnd', null=True)),
                ('pop12h', models.IntegerField(blank=True, db_column='PoP12h', null=True)),
                ('pop12hend', models.DateTimeField(blank=True, db_column='PoP12hEnd', null=True)),
                ('dir', models.CharField(max_length=3)),
                ('mspeed', models.CharField(db_column='mSpeed', max_length=5)),
                ('beauspeed', models.CharField(db_column='beauSpeed', max_length=4)),
                ('ci', models.IntegerField(db_column='CI')),
                ('citext', models.CharField(db_column='CIText', max_length=4)),
                ('apparentt', models.IntegerField(db_column='ApparentT')),
                ('wxtext', models.CharField(db_column='Wxtext', max_length=15)),
                ('wxvalue', models.IntegerField(db_column='WxValue')),
                ('wxend', models.DateTimeField(db_column='WxEnd')),
                ('weatherdescription', models.CharField(blank=True, db_column='WeatherDescription', max_length=255, null=True)),
                ('weatherdescriptionend', models.DateTimeField(blank=True, db_column='WeatherDescriptionEnd', null=True)),
            ],
            options={
                'db_table': 'Harbor',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Marine',
            fields=[
                ('issuetime', models.DateTimeField(db_column='issueTime')),
                ('update', models.DateTimeField()),
                ('locationname', models.CharField(db_column='locationName', max_length=10, primary_key=True, serialize=False)),
                ('starttime', models.DateTimeField(db_column='startTime')),
                ('endtime', models.DateTimeField(db_column='endTime')),
                ('wx', models.CharField(db_column='Wx', max_length=10)),
                ('winddir', models.CharField(db_column='WindDir', max_length=10)),
                ('windspeed', models.CharField(db_column='WindSpeed', max_length=50)),
                ('waveheight', models.CharField(db_column='WaveHeight', max_length=10)),
                ('wavetype', models.CharField(db_column='WaveType', max_length=10)),
                ('wxvalue', models.IntegerField(db_column='WxValue')),
            ],
            options={
                'db_table': 'Marine',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Pointindex',
            fields=[
                ('type', models.CharField(max_length=10, primary_key=True, serialize=False)),
                ('no', models.IntegerField()),
                ('lat', models.DecimalField(decimal_places=3, max_digits=6)),
                ('lon', models.DecimalField(decimal_places=3, max_digits=6)),
                ('buoyid', models.CharField(blank=True, db_column='BuoyId', max_length=6, null=True)),
                ('tideid', models.CharField(blank=True, db_column='TideId', max_length=6, null=True)),
                ('harborid', models.CharField(blank=True, db_column='HarborId', max_length=6, null=True)),
                ('staiondaylightid', models.CharField(blank=True, db_column='StaionDaylightId', max_length=6, null=True)),
            ],
            options={
                'db_table': 'PointIndex',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Stationdaylight',
            fields=[
                ('locationname', models.CharField(blank=True, db_column='locationName', max_length=30, null=True)),
                ('stationid', models.CharField(db_column='stationId', max_length=6, primary_key=True, serialize=False)),
                ('obstime', models.DateTimeField(db_column='obsTime')),
                ('pressure', models.FloatField(blank=True, null=True)),
                ('temp', models.FloatField(blank=True, null=True)),
                ('humidity', models.IntegerField(blank=True, null=True)),
                ('wspeed', models.FloatField(blank=True, db_column='wSpeed', null=True)),
                ('wdir', models.CharField(blank=True, db_column='wDir', max_length=20, null=True)),
                ('precipitation', models.FloatField(blank=True, db_column='Precipitation', null=True)),
                ('sunshine', models.FloatField(blank=True, db_column='Sunshine', null=True)),
                ('tmax', models.FloatField(blank=True, db_column='TMax', null=True)),
                ('tmin', models.FloatField(blank=True, db_column='TMin', null=True)),
                ('tavg', models.FloatField(blank=True, db_column='TAvg', null=True)),
                ('updatetime', models.DateTimeField(db_column='updateTime')),
            ],
            options={
                'db_table': 'StationDaylight',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Stationobs',
            fields=[
                ('lat', models.FloatField(blank=True, null=True)),
                ('lon', models.FloatField(blank=True, null=True)),
                ('stationid', models.CharField(db_column='stationId', max_length=6, primary_key=True, serialize=False)),
                ('obstime', models.DateTimeField(db_column='obsTime')),
                ('elev', models.IntegerField(blank=True, db_column='ELEV', null=True)),
                ('wdir', models.IntegerField(blank=True, db_column='WDIR', null=True)),
                ('wdsd', models.FloatField(blank=True, db_column='WDSD', null=True)),
                ('temp', models.FloatField(blank=True, db_column='TEMP', null=True)),
                ('humd', models.FloatField(blank=True, db_column='HUMD', null=True)),
                ('pres', models.FloatField(blank=True, db_column='PRES', null=True)),
                ('sun', models.FloatField(blank=True, db_column='SUN', null=True)),
                ('h_24r', models.FloatField(blank=True, db_column='H_24R', null=True)),
                ('h_fx', models.FloatField(blank=True, db_column='H_FX', null=True)),
                ('h_xd', models.IntegerField(blank=True, db_column='H_XD', null=True)),
                ('h_fxt', models.CharField(blank=True, db_column='H_FXT', max_length=20, null=True)),
            ],
            options={
                'db_table': 'StationObs',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Stationobs2',
            fields=[
                ('lat', models.FloatField(blank=True, null=True)),
                ('lon', models.FloatField(blank=True, null=True)),
                ('stationid', models.CharField(db_column='stationId', max_length=6, primary_key=True, serialize=False)),
                ('obstime', models.DateTimeField(db_column='obsTime')),
                ('elev', models.IntegerField(blank=True, db_column='ELEV', null=True)),
                ('wdir', models.IntegerField(blank=True, db_column='WDIR', null=True)),
                ('wdsd', models.FloatField(blank=True, db_column='WDSD', null=True)),
                ('temp', models.FloatField(blank=True, db_column='TEMP', null=True)),
                ('humd', models.FloatField(blank=True, db_column='HUMD', null=True)),
                ('pres', models.FloatField(blank=True, db_column='PRES', null=True)),
                ('number_24r', models.FloatField(blank=True, db_column='24R', null=True)),
                ('h_fx', models.FloatField(blank=True, db_column='H_FX', null=True)),
                ('h_xd', models.IntegerField(blank=True, db_column='H_XD', null=True)),
                ('h_fxt', models.IntegerField(blank=True, db_column='H_FXT', null=True)),
                ('h_f10', models.FloatField(blank=True, db_column='H_F10', null=True)),
                ('h_10d', models.IntegerField(blank=True, db_column='H_10D', null=True)),
                ('h_f10t', models.IntegerField(blank=True, db_column='H_F10T', null=True)),
                ('h_uvi', models.FloatField(blank=True, db_column='H_UVI', null=True)),
                ('d_tx', models.FloatField(blank=True, db_column='D_TX', null=True)),
                ('d_txt', models.IntegerField(blank=True, db_column='D_TXT', null=True)),
                ('d_ts', models.FloatField(blank=True, db_column='D_TS', null=True)),
            ],
            options={
                'db_table': 'StationObs2',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Stcfor',
            fields=[
                ('type', models.CharField(max_length=15, primary_key=True, serialize=False)),
                ('no', models.IntegerField()),
                ('time', models.DateTimeField()),
                ('depth', models.IntegerField()),
                ('lat', models.DecimalField(decimal_places=3, max_digits=6)),
                ('lon', models.DecimalField(decimal_places=3, max_digits=6)),
                ('temp', models.FloatField()),
                ('speed', models.FloatField()),
                ('dir', models.FloatField()),
            ],
            options={
                'db_table': 'STCFor',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Stobs',
            fields=[
                ('name', models.CharField(max_length=10, primary_key=True, serialize=False)),
                ('time', models.DateTimeField()),
                ('lat', models.FloatField()),
                ('lon', models.FloatField()),
                ('sst', models.FloatField(blank=True, null=True)),
                ('ws', models.FloatField(blank=True, null=True)),
                ('oni', models.FloatField(blank=True, null=True)),
            ],
            options={
                'db_table': 'STObs',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Stwarning',
            fields=[
                ('name', models.CharField(max_length=10, primary_key=True, serialize=False)),
                ('time', models.DateTimeField()),
                ('warning', models.CharField(max_length=100)),
                ('max_fhs', models.FloatField()),
            ],
            options={
                'db_table': 'STWarning',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Tide',
            fields=[
                ('locationname', models.CharField(db_column='locationName', max_length=20)),
                ('stationid', models.CharField(db_column='stationId', max_length=6, primary_key=True, serialize=False)),
                ('starttime', models.DateTimeField(db_column='startTime')),
                ('endtime', models.DateTimeField(db_column='endTime')),
                ('lunar', models.CharField(max_length=5)),
                ('range', models.CharField(max_length=2)),
                ('tide', models.CharField(max_length=2)),
                ('time', models.DateTimeField()),
                ('twvd', models.IntegerField(blank=True, db_column='TWVD', null=True)),
                ('local', models.IntegerField()),
                ('relative', models.IntegerField()),
            ],
            options={
                'db_table': 'Tide',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Wave',
            fields=[
                ('type', models.CharField(max_length=15, primary_key=True, serialize=False)),
                ('no', models.IntegerField()),
                ('time', models.DateTimeField()),
                ('lon', models.DecimalField(decimal_places=3, max_digits=6)),
                ('lat', models.DecimalField(decimal_places=3, max_digits=6)),
                ('dir', models.FloatField()),
                ('hs', models.FloatField()),
                ('fd', models.FloatField()),
                ('fhs', models.FloatField()),
            ],
            options={
                'db_table': 'Wave',
                'managed': False,
            },
        ),
    ]
